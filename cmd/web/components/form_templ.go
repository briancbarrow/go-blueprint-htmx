// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "strings"

type FeatureTuple struct {
	Key   string
	Value string
}

func GetCommandString(options OptionsStruct) string {
	projectName := strings.ReplaceAll(options.ProjectName, " ", "_")
	if projectName == "" {
		projectName = "SET_YOUR_PROJECT_NAME"
	}
	command := "go-blueprint create --name " + projectName + " --framework " + options.SelectedFramework
	if options.SelectedDB != "none" {
		command += " --driver " + options.SelectedDB
	} else {
		command += " --driver none"
	}
	if len(options.AdvancedOptions) > 0 {
		command += " --advanced"
	}
	for _, opt := range options.AdvancedOptions {
		command += " --feature " + opt
	}
	return command
}

var databases = []FeatureTuple{
	{"none", "None"},
	{"mysql", "MySQL"},
	{"postgres", "Postgres"},
	{"sqlite", "SQLite"},
	{"mongo", "MongoDB"},
}

var frameworks = []FeatureTuple{
	{"standard-library", "Standard Library"},
	{"chi", "Chi"},
	{"echo", "Echo"},
	{"fiber", "Fiber"},
	{"gin", "Gin"},
	{"gorilla/mux", "Gorilla"},
	{"httprouter", "HttpRouter"},
}

var options = OptionsStruct{
	SelectedDB:        "none",
	SelectedFramework: "standard-library",
	ProjectName:       "my_project",
}

func Form() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form class=\"space-y-2\" hx-boost=\"true\" action=\"/update_structure\" method=\"post\"><div class=\"mt-4\"><label for=\"projectName\" class=\"block text-sm font-medium leading-6 text-gray-900\">Project Name</label><div class=\"mt-2\"><input type=\"text\" name=\"projectName\" id=\"projectName\" class=\"block w-full rounded-md border-0 px-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" placeholder=\"my_project\" hx-trigger=\"keyup changed delay:500ms\" hx-post=\"/update_structure\" hx-target=\"#results\" required></div></div><div class=\"grid grid-cols-6 gap-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FeatureBlock(FeatureBlockProps{
			Title:          "Database",
			FeatureOptions: databases,
			GroupName:      "database",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FeatureBlock(FeatureBlockProps{
			Title:          "Framework",
			FeatureOptions: frameworks,
			GroupName:      "framework",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FeatureBlockCheckbox(FeatureBlockProps{
			Title: "Advanced",
			FeatureOptions: []FeatureTuple{
				{"htmx", "HTMX support using Templ."},
				{"githubaction", "CI/CD workflow setup using Github Actions."},
				{"websocket", "Adds a Websocket endpoint."},
				{"tailwind", "Adds Tailwind config and allows for using the Tailwind CLI to compile css based on classes used."},
			},
			GroupName: "advancedOptions",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></form><div id=\"results\"><div class=\"px-4 py-5 sm:p-6 bg-white mt-6 shadow sm:rounded-lg\"><p>Make selections above to see the folder structure your project will have.</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FolderStructure(options, GetCommandString(options)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
